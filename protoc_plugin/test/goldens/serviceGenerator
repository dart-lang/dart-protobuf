abstract class TestServiceBase extends $pb.GeneratedService {
  $async.Future<SomeReply> aMethod($pb.ServerContext ctx, SomeRequest request);
  $async.Future<$0.AnotherReply> anotherMethod($pb.ServerContext ctx, $0.EmptyMessage request);

  $pb.GeneratedMessage createRequest(String method) {
    switch (method) {
      case 'AMethod': return new SomeRequest();
      case 'AnotherMethod': return new $0.EmptyMessage();
      default: throw new ArgumentError('Unknown method: $method');
    }
  }

  $async.Future<$pb.GeneratedMessage> handleCall($pb.ServerContext ctx, String method, $pb.GeneratedMessage request) {
    switch (method) {
      case 'AMethod': return this.aMethod(ctx, request);
      case 'AnotherMethod': return this.anotherMethod(ctx, request);
      default: throw new ArgumentError('Unknown method: $method');
    }
  }

  Map<String, dynamic> get $json => TestServiceBase$json;
  Map<String, Map<String, dynamic>> get $messageJson => TestServiceBase$messageJson;
}

