# Created with package:mono_repo v4.1.0
name: Dart CI
on:
  push:
    branches:
      - master
      - null_safety
  pull_request:
    branches:
      - master
      - null_safety
  schedule:
    - cron: "0 0 * * 0"
defaults:
  run:
    shell: bash
env:
  PUB_ENVIRONMENT: bot.github

jobs:
  job_001:
    name: "analyze; linux; Dart 2.10.5; PKG: protobuf; `dart analyze lib`, `dart analyze test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:2.10.5;packages:protobuf;commands:dartanalyzer_3-dartanalyzer_4"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:2.10.5;packages:protobuf
            os:ubuntu-latest;pub-cache-hosted;dart:2.10.5
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "2.10.5"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: protobuf_pub_upgrade
        name: protobuf; pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: protobuf
        run: pub upgrade
      - name: protobuf; dart analyze lib
        if: "always() && steps.protobuf_pub_upgrade.conclusion == 'success'"
        working-directory: protobuf
        run: dart analyze lib
      - name: protobuf; dart analyze test
        if: "always() && steps.protobuf_pub_upgrade.conclusion == 'success'"
        working-directory: protobuf
        run: dart analyze test
  job_002:
    name: "analyze; linux; Dart 2.10.5; PKG: protoc_plugin; `./../tool/setup.sh`, `make protos`, `dart analyze`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:2.10.5;packages:protoc_plugin;commands:command_0-command_2-dartanalyzer_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:2.10.5;packages:protoc_plugin
            os:ubuntu-latest;pub-cache-hosted;dart:2.10.5
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "2.10.5"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: protoc_plugin_pub_upgrade
        name: protoc_plugin; pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: protoc_plugin
        run: pub upgrade
      - name: protoc_plugin; ./../tool/setup.sh
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: ./../tool/setup.sh
      - name: protoc_plugin; make protos
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: make protos
      - name: protoc_plugin; dart analyze
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: dart analyze
  job_003:
    name: "analyze; linux; Dart dev; PKG: protobuf; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos lib`, `dart analyze --fatal-infos test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:protobuf;commands:dartfmt-dartanalyzer_1-dartanalyzer_2"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:protobuf
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: protobuf_pub_upgrade
        name: protobuf; pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: protobuf
        run: pub upgrade
      - name: "protobuf; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.protobuf_pub_upgrade.conclusion == 'success'"
        working-directory: protobuf
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "protobuf; dart analyze --fatal-infos lib"
        if: "always() && steps.protobuf_pub_upgrade.conclusion == 'success'"
        working-directory: protobuf
        run: dart analyze --fatal-infos lib
      - name: "protobuf; dart analyze --fatal-infos test"
        if: "always() && steps.protobuf_pub_upgrade.conclusion == 'success'"
        working-directory: protobuf
        run: dart analyze --fatal-infos test
  job_004:
    name: "analyze; linux; Dart dev; PKG: protoc_plugin; `./../tool/setup.sh`, `make protos`, `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:protoc_plugin;commands:command_0-command_2-dartfmt-dartanalyzer_5"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:protoc_plugin
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: protoc_plugin_pub_upgrade
        name: protoc_plugin; pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: protoc_plugin
        run: pub upgrade
      - name: protoc_plugin; ./../tool/setup.sh
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: ./../tool/setup.sh
      - name: protoc_plugin; make protos
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: make protos
      - name: "protoc_plugin; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "protoc_plugin; dart analyze --fatal-infos"
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: dart analyze --fatal-infos
  job_005:
    name: "run_tests; linux; Dart 2.10.5; PKG: protobuf; `dart test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:2.10.5;packages:protobuf;commands:test"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:2.10.5;packages:protobuf
            os:ubuntu-latest;pub-cache-hosted;dart:2.10.5
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "2.10.5"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: protobuf_pub_upgrade
        name: protobuf; pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: protobuf
        run: pub upgrade
      - name: protobuf; dart test
        if: "always() && steps.protobuf_pub_upgrade.conclusion == 'success'"
        working-directory: protobuf
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
  job_006:
    name: "run_tests; linux; Dart 2.10.5; PKG: protoc_plugin; `./../tool/setup.sh`, `make protos`, `dart test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:2.10.5;packages:protoc_plugin;commands:command_0-command_2-test"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:2.10.5;packages:protoc_plugin
            os:ubuntu-latest;pub-cache-hosted;dart:2.10.5
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "2.10.5"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: protoc_plugin_pub_upgrade
        name: protoc_plugin; pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: protoc_plugin
        run: pub upgrade
      - name: protoc_plugin; ./../tool/setup.sh
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: ./../tool/setup.sh
      - name: protoc_plugin; make protos
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: make protos
      - name: protoc_plugin; dart test
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
  job_007:
    name: "run_tests; linux; Dart dev; PKG: protobuf; `dart test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:protobuf;commands:test"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:protobuf
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: protobuf_pub_upgrade
        name: protobuf; pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: protobuf
        run: pub upgrade
      - name: protobuf; dart test
        if: "always() && steps.protobuf_pub_upgrade.conclusion == 'success'"
        working-directory: protobuf
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
  job_008:
    name: "run_tests; linux; Dart dev; PKG: protoc_plugin; `./../tool/setup.sh`, `make protos`, `dart test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:protoc_plugin;commands:command_0-command_2-test"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:protoc_plugin
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: protoc_plugin_pub_upgrade
        name: protoc_plugin; pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: protoc_plugin
        run: pub upgrade
      - name: protoc_plugin; ./../tool/setup.sh
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: ./../tool/setup.sh
      - name: protoc_plugin; make protos
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: make protos
      - name: protoc_plugin; dart test
        if: "always() && steps.protoc_plugin_pub_upgrade.conclusion == 'success'"
        working-directory: protoc_plugin
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
  job_009:
    name: "run_tests; osx; Dart 2.10.5; PKG: protobuf; `dart test`"
    runs-on: macos-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:macos-latest;pub-cache-hosted;dart:2.10.5;packages:protobuf;commands:test"
          restore-keys: |
            os:macos-latest;pub-cache-hosted;dart:2.10.5;packages:protobuf
            os:macos-latest;pub-cache-hosted;dart:2.10.5
            os:macos-latest;pub-cache-hosted
            os:macos-latest
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "2.10.5"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: protobuf_pub_upgrade
        name: protobuf; pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: protobuf
        run: pub upgrade
      - name: protobuf; dart test
        if: "always() && steps.protobuf_pub_upgrade.conclusion == 'success'"
        working-directory: protobuf
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
  job_010:
    name: "run_tests; osx; Dart dev; PKG: protobuf; `dart test`"
    runs-on: macos-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:macos-latest;pub-cache-hosted;dart:dev;packages:protobuf;commands:test"
          restore-keys: |
            os:macos-latest;pub-cache-hosted;dart:dev;packages:protobuf
            os:macos-latest;pub-cache-hosted;dart:dev
            os:macos-latest;pub-cache-hosted
            os:macos-latest
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: protobuf_pub_upgrade
        name: protobuf; pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: protobuf
        run: pub upgrade
      - name: protobuf; dart test
        if: "always() && steps.protobuf_pub_upgrade.conclusion == 'success'"
        working-directory: protobuf
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
  job_011:
    name: "run_tests; windows; Dart 2.10.5; PKG: protobuf; `dart test`"
    runs-on: windows-latest
    steps:
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: "2.10.5"
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: protobuf_pub_upgrade
        name: protobuf; pub.bat upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: protobuf
        run: pub.bat upgrade
      - name: protobuf; dart test
        if: "always() && steps.protobuf_pub_upgrade.conclusion == 'success'"
        working-directory: protobuf
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
  job_012:
    name: "run_tests; windows; Dart dev; PKG: protobuf; `dart test`"
    runs-on: windows-latest
    steps:
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: protobuf_pub_upgrade
        name: protobuf; pub.bat upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: protobuf
        run: pub.bat upgrade
      - name: protobuf; dart test
        if: "always() && steps.protobuf_pub_upgrade.conclusion == 'success'"
        working-directory: protobuf
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
  job_013:
    name: "format_analyze; linux; Dart dev; PKGS: api_benchmark, query_benchmark; `./../tool/setup.sh`, `./compile_protos.sh`, `dart format --output=none --set-exit-if-changed .`, `dart analyze`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.6
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:api_benchmark-query_benchmark;commands:command_0-command_1-dartfmt-dartanalyzer_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:api_benchmark-query_benchmark
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2.3.4
      - id: api_benchmark_pub_upgrade
        name: api_benchmark; pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: api_benchmark
        run: pub upgrade
      - name: api_benchmark; ./../tool/setup.sh
        if: "always() && steps.api_benchmark_pub_upgrade.conclusion == 'success'"
        working-directory: api_benchmark
        run: ./../tool/setup.sh
      - name: api_benchmark; ./compile_protos.sh
        if: "always() && steps.api_benchmark_pub_upgrade.conclusion == 'success'"
        working-directory: api_benchmark
        run: ./compile_protos.sh
      - name: "api_benchmark; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.api_benchmark_pub_upgrade.conclusion == 'success'"
        working-directory: api_benchmark
        run: "dart format --output=none --set-exit-if-changed ."
      - name: api_benchmark; dart analyze
        if: "always() && steps.api_benchmark_pub_upgrade.conclusion == 'success'"
        working-directory: api_benchmark
        run: dart analyze
      - id: query_benchmark_pub_upgrade
        name: query_benchmark; pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: query_benchmark
        run: pub upgrade
      - name: query_benchmark; ./../tool/setup.sh
        if: "always() && steps.query_benchmark_pub_upgrade.conclusion == 'success'"
        working-directory: query_benchmark
        run: ./../tool/setup.sh
      - name: query_benchmark; ./compile_protos.sh
        if: "always() && steps.query_benchmark_pub_upgrade.conclusion == 'success'"
        working-directory: query_benchmark
        run: ./compile_protos.sh
      - name: "query_benchmark; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.query_benchmark_pub_upgrade.conclusion == 'success'"
        working-directory: query_benchmark
        run: "dart format --output=none --set-exit-if-changed ."
      - name: query_benchmark; dart analyze
        if: "always() && steps.query_benchmark_pub_upgrade.conclusion == 'success'"
        working-directory: query_benchmark
        run: dart analyze
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
      - job_007
      - job_008
      - job_009
      - job_010
      - job_011
      - job_012
